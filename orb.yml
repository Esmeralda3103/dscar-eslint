version: 2.1

description: Delta ESLint Reports
orbs:
  dscar: naokikimura/dscar@0.0.6
executors:
  default:
    description: Use a CircleCI convenience image to analyze code statically
    docker:
    - image: circleci/node:lts
commands:
  execute:
    description: Calculate the difference of ESLint results between HEAD branch and BASE branch
    parameters:
      analysis-prepare:
        description: Specify the required steps before eslint if necessary
        type: steps
        default:
          - run: npm install --global eslint
      analysis-arguments:
        description: Arguments of eslint command
        type: string
        default: --ext '.js,.jsx,.ts,.tsx' .
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
    steps:
      - dscar/execute:
          analysis-name: ESLint
          analysis-command: npx eslint
          analysis-prepare: << parameters.analysis-prepare >>
          analysis-arguments: << parameters.analysis-arguments >> -f junit
          calculate-options: --test-case-key='concat(@classname,"#",@name,"=>",normalize-space())'
          test-results-path: << parameters.test-results-path >>
jobs:
  execute:
    description: Calculate the difference of ESLint results between HEAD branch and BASE branch
    parameters:
      executor:
        type: executor
        default: default
      analysis-prepare:
        description: Specify the required steps before eslint if necessary
        type: steps
        default:
          - run: npm install --global eslint
      analysis-arguments:
        description: Arguments of eslint command
        type: string
        default: --ext '.js,.jsx,.ts,.tsx' .
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
    executor: << parameters.executor >>
    steps:
      - execute:
          analysis-prepare: << parameters.analysis-prepare >>
          analysis-arguments: << parameters.analysis-arguments >>
          test-results-path: << parameters.test-results-path >>
